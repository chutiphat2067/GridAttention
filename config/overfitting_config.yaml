# overfitting_config.yaml
# Configuration for overfitting detection and prevention system
# Author: Grid Trading System
# Date: 2024

# Overfitting Detection Configuration
overfitting_detection:
  # Performance divergence thresholds
  performance_gap_threshold: 0.15      # 15% max acceptable gap between train/test
  confidence_threshold: 0.2            # 20% max calibration error
  feature_stability_threshold: 0.3     # 30% max feature importance change
  
  # Detection windows
  min_samples_for_detection: 100       # Minimum samples before detection
  detection_window_size: 1000          # Rolling window for metrics
  
  # Monitoring intervals
  monitoring_interval: 300             # Check every 5 minutes (seconds)
  alert_check_interval: 60             # Check alerts every minute
  
  # Alert thresholds
  alert_thresholds:
    performance_gap: 0.2              # Alert if gap > 20%
    consecutive_detections: 3         # Alert after 3 consecutive detections
    severity_threshold: "HIGH"        # Alert severity level

# Enhanced Regularization Configuration
regularization:
  # Dropout settings
  dropout_rate: 0.3                   # Dropout probability
  attention_dropout: 0.2              # Attention layer dropout
  
  # Weight regularization
  weight_decay: 0.01                  # L2 regularization strength
  l1_lambda: 0.001                    # L1 regularization strength
  
  # Training constraints
  gradient_clipping: 1.0              # Gradient clipping threshold
  max_norm: 2.0                       # Maximum weight norm
  
  # Early stopping
  early_stopping_patience: 50         # Epochs without improvement
  min_delta: 0.001                    # Minimum improvement threshold
  
  # Data augmentation
  label_smoothing: 0.1                # Label smoothing factor
  mixup_alpha: 0.2                    # Mixup augmentation alpha

# Recovery Configuration
recovery:
  # Critical severity actions
  critical:
    position_reduction: 0.7           # Reduce positions by 70%
    learning_rate_reduction: 0.1      # Reduce LR to 10%
    enable_conservative_mode: true
    disable_complex_features: true
    
  # High severity actions
  high:
    position_reduction: 0.5           # Reduce positions by 50%
    learning_rate_reduction: 0.5      # Reduce LR by 50%
    increase_validation_freq: 2       # Double validation frequency
    
  # Medium severity actions
  medium:
    position_reduction: 0.3           # Reduce positions by 30%
    learning_rate_reduction: 0.7      # Reduce LR by 30%
    fine_tune_regularization: true
    
  # Low severity actions
  low:
    increase_monitoring: true
    adjust_thresholds: true

# Model Checkpointing Configuration
checkpointing:
  # Checkpoint settings
  checkpoint_dir: "./checkpoints"
  max_checkpoints_per_model: 10       # Keep last 10 checkpoints
  checkpoint_interval: 3600           # Save every hour (seconds)
  
  # Auto-save triggers
  auto_save_triggers:
    performance_improvement: 0.02     # Save if 2% improvement
    after_recovery: true              # Save after recovery
    before_risky_changes: true        # Save before major changes
    
  # Validation requirements
  validation_before_save: true
  min_validation_score: 0.6           # Minimum score to save
  
  # Rollback triggers
  rollback_triggers:
    performance_drop: 0.1             # Rollback if 10% drop
    overfitting_severity: "HIGH"      # Rollback on high overfitting
    consecutive_failures: 5           # Rollback after 5 failures

# Ensemble Configuration
ensemble:
  # Model ensemble settings
  models:
    - name: "rule_based"
      weight: 0.25
      type: "RuleBasedDetector"
      
    - name: "gmm"
      weight: 0.3
      type: "GMMDetector"
      config:
        n_components: 3               # Reduced from 4
        covariance_type: "diag"       # Simpler than full
        
    - name: "neural_network"
      weight: 0.25
      type: "NeuralNetworkDetector"
      config:
        hidden_layers: [20, 10]       # Small network
        dropout: 0.3
        
    - name: "simple_threshold"
      weight: 0.2
      type: "SimpleThresholdDetector"
      
  # Weight adjustment
  weight_adjustment:
    learning_rate: 0.1                # Weight update rate
    min_weight: 0.1                   # Minimum model weight
    max_weight: 0.5                   # Maximum model weight

# Data Augmentation Configuration
data_augmentation:
  # Augmentation settings
  augmentation_factor: 3.0            # Max 3x original data
  noise_level: "moderate"             # conservative/moderate/aggressive
  
  # Augmentation methods
  methods:
    noise_injection:
      enabled: true
      price_noise: 0.0001             # 0.01% noise
      volume_noise: 0.01              # 1% volume noise
      
    time_warping:
      enabled: true
      warp_factor: 0.1                # 10% time distortion
      
    magnitude_warping:
      enabled: true
      magnitude_factor: 0.1           # 10% magnitude change
      
    bootstrap_sampling:
      enabled: true
      bootstrap_ratio: 0.5            # 50% bootstrap samples
      
    synthetic_patterns:
      enabled: true
      synthetic_ratio: 0.3            # 30% synthetic data
      
  # Quality control
  preserve_correlations: true
  quality_threshold: 0.8              # Minimum quality score

# Adaptive Learning Configuration
adaptive_learning:
  # Scheduler settings
  scheduler_type: "adaptive_plateau"  # Options: adaptive_plateau, cosine, exponential
  initial_lr: 0.001
  min_lr: 0.000001
  max_lr: 0.01
  
  # Plateau detection
  patience: 20                        # Epochs without improvement
  reduction_factor: 0.5               # LR reduction factor
  adaptive_threshold: 0.01            # Minimum improvement
  
  # Warmup
  warmup_epochs: 10
  warmup_factor: 0.1                  # Start at 10% of initial LR
  
  # Cycle settings (for cyclic schedulers)
  cycle_length: 50
  cycle_mult: 2                       # Double cycle length each time

# Monitoring Dashboard Configuration
dashboard:
  # Update intervals
  update_interval: 1                  # Dashboard update (seconds)
  metrics_update_interval: 5          # Metrics collection
  
  # Chart settings
  history_window: 1000                # Points to display
  
  # Alerts
  enable_email_alerts: false
  enable_slack_alerts: false
  alert_cooldown: 3600                # 1 hour between same alerts

# Component Integration
integration:
  # Component priorities
  component_priorities:
    overfitting_detector: 1           # Highest priority
    checkpoint_manager: 2
    recovery_manager: 3
    monitoring: 4
    
  # Error handling
  max_retries: 3
  retry_delay: 1.0                    # Seconds
  
  # Health checks
  health_check_interval: 60           # Every minute
  component_timeout: 30               # Component response timeout

# Testing Configuration
testing:
  # Test data settings
  test_data_ratio: 0.2                # 20% for testing
  validation_data_ratio: 0.1          # 10% for validation
  
  # Backtesting
  backtesting_periods:
    - period: "1M"
      weight: 0.3
    - period: "3M"
      weight: 0.5
    - period: "6M"
      weight: 0.2
      
  # Performance benchmarks
  min_acceptable_sharpe: 1.0
  max_acceptable_drawdown: 0.15       # 15% max drawdown

# Production Safety
production_safety:
  # Safe mode triggers
  safe_mode_triggers:
    overfitting_score: 0.7            # Enter safe mode if score > 0.7
    consecutive_losses: 10
    daily_loss_threshold: 0.02        # 2% daily loss
    
  # Safe mode settings
  safe_mode:
    max_position_size: 0.01           # 1% max position
    max_concurrent_orders: 2
    disable_new_strategies: true
    force_market_neutral: true
    
  # Emergency stop
  emergency_stop:
    enabled: true
    loss_threshold: 0.05              # 5% loss triggers stop
    manual_override_required: true